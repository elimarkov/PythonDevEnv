# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  workflow_dispatch:
  repository_dispatch:
    types: [ do_something ]
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  release-project:
    name: Release to GitHub Releases
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: python-dev-env-ubuntu-latest-3.9
      - name: Compress
        uses: thedoctor0/zip-release@master
        with:
          type: "zip"
          filename: 'windows-release.zip'
          # exclusions: '*.git* /*node_modules/* .editorconfig'
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{github.run_number}}
          release_name: Release V${{github.run_number}}
      - name: Upload Assets to GitHub Release
        uses: actions/upload-release-assert@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url}}
          asset_path: ./windows-release.zip
          asset_name: python-dev-env_v{{github.run_number}}.zip
          asset_content_type: application/zip


  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.os }} ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Build python extension
      run: |
        python3 setup.py build_ext --inplace 
    - name: Run tests
      run: |
        python3 -m unittest discover tests/
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: python-dev-env-${{ matrix.os }}-${{ matrix.python-version }}
        path: src/
